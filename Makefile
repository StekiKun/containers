#############################################################################
##  v      #                   The Coq Proof Assistant                     ##
## <O___,, #                INRIA - CNRS - LIX - LRI - PPS                 ##
##   \VV/  #                                                               ##
##    //   #  Makefile automagically generated by coq_makefile Vtrunk      ##
#############################################################################

# WARNING
#
# This Makefile has been automagically generated
# Edit at your own risks !
#
# END OF WARNING

#
# This Makefile was generated by the command line :
# coq_makefile -f Make -o Makefile 
#

NOARG: all

# 
# This Makefile may take COQBIN as argument passed as environment variables:
#  to specify the directory where Coq binaries resides;
Makefile-localvars.gen:
	$(COQBIN)coqtop -config > $@

-include Makefile-localvars.gen
.SECONDARY: Makefile-localvars.gen

##########################
#                        #
# Libraries definitions. #
#                        #
##########################

OCAMLLIBS?=
COQSRCLIBS?=-I $(COQLIB)kernel -I $(COQLIB)lib \
  -I $(COQLIB)library -I $(COQLIB)parsing \
  -I $(COQLIB)pretyping -I $(COQLIB)interp \
  -I $(COQLIB)proofs -I $(COQLIB)tactics \
  -I $(COQLIB)toplevel \
  -I $(COQLIB)plugins/cc \
  -I $(COQLIB)plugins/decl_mode \
  -I $(COQLIB)plugins/dp \
  -I $(COQLIB)plugins/extraction \
  -I $(COQLIB)plugins/field \
  -I $(COQLIB)plugins/firstorder \
  -I $(COQLIB)plugins/fourier \
  -I $(COQLIB)plugins/funind \
  -I $(COQLIB)plugins/micromega \
  -I $(COQLIB)plugins/nsatz \
  -I $(COQLIB)plugins/omega \
  -I $(COQLIB)plugins/quote \
  -I $(COQLIB)plugins/ring \
  -I $(COQLIB)plugins/romega \
  -I $(COQLIB)plugins/rtauto \
  -I $(COQLIB)plugins/setoid_ring \
  -I $(COQLIB)plugins/subtac \
  -I $(COQLIB)plugins/subtac/test \
  -I $(COQLIB)plugins/syntax \
  -I $(COQLIB)plugins/xml
COQLIBS?= -R theories Containers\
  -R src Containers.Plugin
COQDOCLIBS?=-R theories Containers\
  -R src Containers.Plugin

##########################
#                        #
# Variables definitions. #
#                        #
##########################

TESTVOFILES=$(TESTVFILES:.v=.vo)
TESTVFILES=tests/BenchMarks.v tests/TestSet.v tests/TestMap.v
CAMLP4OPTIONS=-loc loc
OCAMLLIBS=-I src
COQDOC=$(COQBIN)coqdoc -interpolate -utf8
CONTAINERS_PLUGINOPT=src/containers_plugin.cmxs
CONTAINERS_PLUGIN=src/containers_plugin.cma

ZFLAGS=$(OCAMLLIBS) $(COQSRCLIBS) -I $(CAMLP4LIB)
OPT?=
COQFLAGS?=-q $(OPT) $(COQLIBS) $(OTHERFLAGS) $(COQ_XML)
COQC?=$(COQBIN)coqc
COQDEP?=$(COQBIN)coqdep -c
GALLINA?=$(COQBIN)gallina
COQDOC?=$(COQBIN)coqdoc
CAMLC?=$(OCAMLC) -c -rectypes
CAMLOPTC?=$(OCAMLOPT) -c -rectypes
CAMLLINK?=$(OCAMLC) -rectypes
CAMLOPTLINK?=$(OCAMLOPT) -rectypes
GRAMMARS?=grammar.cma
CAMLP4EXTEND?=pa_extend.cmo pa_macro.cmo q_MLast.cmo
CAMLP4OPTIONS?=
PP?=-pp "$(CAMLP4BIN)$(CAMLP4)o -I $(CAMLLIB) -I . $(COQSRCLIBS) $(CAMLP4EXTEND) $(GRAMMARS) $(CAMLP4OPTIONS) -impl"

###################################
#                                 #
# Definition of the "all" target. #
#                                 #
###################################

VFILES:=theories/SetConstructs.v\
  theories/Generate.v\
  theories/Maps.v\
  theories/CMapPositiveInstance.v\
  theories/CMapPositive.v\
  theories/MapPositiveInstance.v\
  theories/MapPositive.v\
  theories/MapAVLInstance.v\
  theories/MapAVL.v\
  theories/MapListInstance.v\
  theories/MapList.v\
  theories/MapFacts.v\
  theories/MapNotations.v\
  theories/MapInterface.v\
  theories/Sets.v\
  theories/SetAVLInstance.v\
  theories/SetAVL.v\
  theories/SetListInstance.v\
  theories/SetList.v\
  theories/SetEqProperties.v\
  theories/SetProperties.v\
  theories/SetDecide.v\
  theories/SetFacts.v\
  theories/SetInterface.v\
  theories/Bridge.v\
  theories/OrderedTypeEx.v\
  theories/Tactics.v\
  theories/OrderedType.v
VOFILES:=$(VFILES:.v=.vo)
VOFILES1=$(patsubst theories/%,%,$(filter theories/%,$(VOFILES)))
GLOBFILES:=$(VFILES:.v=.glob)
VIFILES:=$(VFILES:.v=.vi)
GFILES:=$(VFILES:.v=.g)
HTMLFILES:=$(VFILES:.v=.html)
GHTMLFILES:=$(VFILES:.v=.g.html)
MLFILES:=src/containers_plugin_mod.ml\
  src/generate.ml\
  src/printing.ml
CMOFILES:=$(MLFILES:.ml=.cmo)
CMOFILES2=$(patsubst src/%,%,$(filter src/%,$(CMOFILES)))
CMXFILES:=$(CMOFILES:.cmo=.cmx)
OFILES:=$(CMXFILES:.cmx=.o)
CMIFILES:=$(CMOFILES:.cmo=.cmi)
CMIFILES2=$(patsubst src/%,%,$(filter src/%,$(CMIFILES)))
CMXSFILES:=$(CMXFILES:.cmx=.cmxs)
CMXSFILES2=$(patsubst src/%,%,$(filter src/%,$(CMXSFILES)))

all: $(VOFILES) $(CMOFILES) $(if ifeq '$(HASNATDYNLINK)' 'true',$(CMXSFILES)) \
  $(CONTAINERS_PLUGINOPT)\
  $(CONTAINERS_PLUGIN)

spec: $(VIFILES)

gallina: $(GFILES)

html: $(GLOBFILES) $(VFILES)
	- mkdir -p html
	$(COQDOC) -toc -html $(COQDOCLIBS) -d html $(VFILES)

gallinahtml: $(GLOBFILES) $(VFILES)
	- mkdir -p html
	$(COQDOC) -toc -html -g $(COQDOCLIBS) -d html $(VFILES)

all.ps: $(VFILES)
	$(COQDOC) -toc -ps $(COQDOCLIBS) -o $@ `$(COQDEP) -sort -suffix .v $(VFILES)`

all-gal.ps: $(VFILES)
	$(COQDOC) -toc -ps -g $(COQDOCLIBS) -o $@ `$(COQDEP) -sort -suffix .v $(VFILES)`

all.pdf: $(VFILES)
	$(COQDOC) -toc -pdf $(COQDOCLIBS) -o $@ `$(COQDEP) -sort -suffix .v $(VFILES)`

all-gal.pdf: $(VFILES)
	$(COQDOC) -toc -pdf -g $(COQDOCLIBS) -o $@ `$(COQDEP) -sort -suffix .v $(VFILES)`


###################
#                 #
# Custom targets. #
#                 #
###################

: 
	
#the following is inserted verbatim

theories/Generate.vo: $(CONTAINERS_PLUGINOPT) $(CONTAINERS_PLUGIN)

install-plugin:
	install -d $(COQLIB)/user-contrib/Containers/Plugin/
	install -t $(COQLIB)/user-contrib/Containers/Plugin/ $(CONTAINERS_PLUGIN) $(CONTAINERS_PLUGINOPT)

install: install-plugin

test: $(TESTVOFILES) 

$(TESTVOFILES): $(VOFILES)

clean-test: 
	-rm -f  $(TESTVOFILES) $(TESTVFILES:.v=.glob) $(TESTVFILES:.v=.v.d) 

clean: clean-test

#end verbatim


$(CONTAINERS_PLUGINOPT): $(CMXFILES)
	$(CAMLOPTLINK) $(ZDEBUG) $(ZFLAGS) -shared -o $@ $^

$(CONTAINERS_PLUGIN): $(CMOFILES)
	$(CAMLLINK) -g -a -o $@ $^

####################
#                  #
# Special targets. #
#                  #
####################

.PHONY: NOARG all opt byte archclean clean install depend html

%.cmo: %.ml
	$(CAMLC) $(ZDEBUG) $(ZFLAGS) $<

%.cmx: %.ml
	$(CAMLOPTC) $(ZDEBUG) $(ZFLAGS) $<

%.ml.d: %.ml
	$(OCAMLDEP) -slash $(OCAMLLIBS) "$<" > "$@" || ( RV=$$?; rm -f "$@"; exit $${RV} )

%.cmxs: %.cmx
	$(CAMLOPTLINK) $(ZDEBUG) $(ZFLAGS) -shared -o $@ $<

%.vo %.glob: %.v
	$(COQC) $(COQDEBUG) $(COQFLAGS) $*

%.vi: %.v
	$(COQC) -i $(COQDEBUG) $(COQFLAGS) $*

%.g: %.v
	$(GALLINA) $<

%.tex: %.v
	$(COQDOC) -latex $< -o $@

%.html: %.v %.glob
	$(COQDOC) -html $< -o $@

%.g.tex: %.v
	$(COQDOC) -latex -g $< -o $@

%.g.html: %.v %.glob
	$(COQDOC) -html -g $< -o $@

%.v.d: %.v
	$(COQDEP) -slash $(COQLIBS) "$<" > "$@" || ( RV=$$?; rm -f "$@"; exit $${RV} )

byte:
	$(MAKE) all "OPT:=-byte"

opt:
	$(MAKE) all "OPT:=-opt"

install-natdynlink:
	cd src; for i in $(CMXSFILES2); do \
	 install -d `dirname $(DSTROOT)$(COQLIB)user-contrib/Containers/Plugin/$$i`; \
	 install $$i $(DSTROOT)$(COQLIB)user-contrib/Containers/Plugin/$$i; \
	done

install:$(if ifeq '$(HASNATDYNLINK)' 'true',install-natdynlink)
	cd theories; for i in $(VOFILES1); do \
	 install -d `dirname $(DSTROOT)$(COQLIB)user-contrib/Containers/$$i`; \
	 install $$i $(DSTROOT)$(COQLIB)user-contrib/Containers/$$i; \
	done
	cd src; for i in $(CMOFILES2); do \
	 install -d `dirname $(DSTROOT)$(COQLIB)user-contrib/Containers/Plugin/$$i`; \
	 install $$i $(DSTROOT)$(COQLIB)user-contrib/Containers/Plugin/$$i; \
	done
	cd src; for i in $(CMIFILES2); do \
	 install -d `dirname $(DSTROOT)$(COQLIB)user-contrib/Containers/Plugin/$$i`; \
	 install $$i $(DSTROOT)$(COQLIB)user-contrib/Containers/Plugin/$$i; \
	done

install-doc:
	install -d $(DSTROOT)$(DOCDIR)user-contrib/Containers/html
	for i in html/*; do \
	 install $$i $(DSTROOT)$(DOCDIR)user-contrib/Containers/$$i;\
	done

clean:
	rm -f *~ Makefile-localvars.gen
	rm -f $(CMOFILES) $(CMIFILES) $(CMXFILES) $(CMAFILES) $(CMXAFILES) $(CMXSFILES) $(OFILES)
	rm -f $(MLFILES:.ml=.ml.d) $(MLIFILES:.mli=.mli.d) $(ML4FILES:.ml4=.ml4.d) $(MLLIBFILES:.mllib=.mllib.d)
	rm -f $(VOFILES) $(VIFILES) $(GFILES) $(VFILES:.v=.v.d)
	rm -f all.ps all-gal.ps all.pdf all-gal.pdf all.glob $(VFILES:.v=.glob) $(VFILES:.v=.tex) $(VFILES:.v=.g.tex) all-mli.tex
	- rm -rf html mlihtml
	- rm -rf 
	- rm -rf $(CONTAINERS_PLUGINOPT)
	- rm -rf $(CONTAINERS_PLUGIN)

archclean:
	rm -f *.cmx *.o


printenv: Makefile-localvars.gen
	@cat $^
	@echo CAMLC =	$(CAMLC)
	@echo CAMLOPTC =	$(CAMLOPTC)
	@echo PP =	$(PP)
	@echo COQFLAGS =	$(COQFLAGS)

Makefile: Make
	mv -f $@ $@.bak
	$(COQBIN)coq_makefile -f $< -o $@


-include $(VFILES:.v=.v.d)
.SECONDARY: $(VFILES:.v=.v.d)

-include $(MLFILES:.ml=.ml.d)
.SECONDARY: $(MLFILES:.ml=.ml.d)

# WARNING
#
# This Makefile has been automagically generated
# Edit at your own risks !
#
# END OF WARNING

